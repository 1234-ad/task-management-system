version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: task-management-db
    environment:
      POSTGRES_DB: taskmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - task-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-management-backend
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: taskmanagement
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      UPLOAD_PATH: /app/uploads
    ports:
      - "5000:5000"
    volumes:
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - task-network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: http://localhost:5000/api
        REACT_APP_SOCKET_URL: http://localhost:5000
    container_name: task-management-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - task-network
    restart: unless-stopped

volumes:
  postgres_data:
  backend_uploads:

networks:
  task-network:
    driver: bridge